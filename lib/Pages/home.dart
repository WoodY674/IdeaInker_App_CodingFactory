import 'dart:convert';
import 'dart:math';
import 'package:flutter/foundation.dart';
import 'package:http/http.dart' as http;
import 'package:convex_bottom_bar/convex_bottom_bar.dart';
import 'package:flutter/material.dart';
import 'package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart';
import 'package:streaming_shared_preferences/streaming_shared_preferences.dart';
import 'package:thebestatoo/Pages/sideBar.dart';
import 'package:streaming_shared_preferences/streaming_shared_preferences.dart';

final String url = "http://ideainker.fr/api/posts";

List<Autogenerated> parseShop(String responseBody){
  var list = json.decode(responseBody) as List<dynamic>;
  var salons = list.map((e) => Autogenerated.fromJson(e)).toList();
  return salons;
}

Future<List<Autogenerated>> fetchShop() async {
  final http.Response response = await http.get(Uri.parse(url),
  );

  if (response.statusCode == 200) {
    // If the server did return a 200 OK response,
    // then parse the JSON.
    //return Salon.fromJson(jsonDecode(response.body));
    return compute(parseShop,response.body);
  } else {
    // If the server did not return a 200 OK response,
    // then throw an exception.
    throw Exception(response.statusCode);
  }
}

class Autogenerated {
  int? id;
  String? content;
  String? createdAt;
  Images? image;
  String? createdBy;

  Autogenerated(
      {this.id, this.content, this.createdAt, this.image, this.createdBy});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    content = json['content'];
    createdAt = json['createdAt'];
    image = json['image'] != null ? new Images.fromJson(json['image']) : null;
    createdBy = json['createdBy'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['content'] = this.content;
    data['createdAt'] = this.createdAt;
    if (this.image != null) {
      data['image'] = this.image!.toJson();
    }
    data['createdBy'] = this.createdBy;
    return data;
  }
}

class Images {
  String? imagePath;

  Images({this.imagePath});

  Images.fromJson(Map<String, dynamic> json) {
    imagePath = json['imagePath'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['imagePath'] = this.imagePath;
    return data;
  }
}

class Home extends StatefulWidget {
  const Home({Key? key}) : super(key: key);
  static String route = 'home';

  @override
  _Home createState() => _Home();
}

class _Home extends State<Home> {
  late Future<List<Autogenerated>> futureShop;

  @override
  void initState() {
    super.initState();
    futureShop = fetchShop();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      drawer: SideBar(),
      appBar: AppBar(
        title: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Image.asset(
              'assets/IdeaInkerBanderole.png',
              fit: BoxFit.contain,
              height: 40,
            ),
          ],
        ),
        backgroundColor: Colors.deepPurple,
      ),
      backgroundColor: Colors.white,
      body: FutureBuilder<List<Autogenerated>>(
          future: futureShop,
          builder: (BuildContext context, AsyncSnapshot<List<Autogenerated>> snapshot) {
            if (snapshot.hasData) {
              return Padding(
                padding: const EdgeInsets.all(10),
                child: MasonryGridView.count(
                  crossAxisCount: 2,
                  mainAxisSpacing: 8,
                  crossAxisSpacing: 8,
                  itemCount: snapshot.data?.length,
                  itemBuilder: (context, index) {
                    Autogenerated currentSalon = snapshot.data![index];
                    return Column(
                      children: [
                        ClipRRect(
                          borderRadius: BorderRadius.circular(15),
                          child: Image.network(
                            'http://ideainker.fr/'+currentSalon.image!.imagePath!,
                            fit: BoxFit.cover,
                          ),
                        ),
                        Row(
                          crossAxisAlignment: CrossAxisAlignment.center,
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Text(
                              currentSalon.content!,
                              style: const TextStyle(
                                  fontWeight: FontWeight.w700, fontSize: 12),
                            ),
                            GestureDetector(
                              onTap: () {
                                showModalBottomSheet(
                                  backgroundColor: Colors.transparent,
                                  context: context,
                                  builder: (BuildContext context) {
                                    return Container(
                                      padding: const EdgeInsets.symmetric(vertical: 30),
                                      height: MediaQuery
                                          .of(context)
                                          .size
                                          .height / 2,
                                      decoration: BoxDecoration(
                                        color: Colors.white,
                                        borderRadius: BorderRadius.circular(35),
                                      ),
                                      child: Column(
                                        children: [
                                          const Text(
                                            "Share to",
                                            style: TextStyle(
                                                fontWeight: FontWeight.bold,
                                                fontSize: 14),
                                          ),
                                          const SizedBox(
                                            height: 17,
                                          ),
                                          SizedBox(
                                            height: 100.0,
                                            child: ListView.builder(
                                              scrollDirection: Axis.horizontal,
                                              itemCount: sharePosts.length,
                                              itemBuilder: (context, index) {
                                                return SizedBox(
                                                  width: 90,
                                                  child: Column(children: [
                                                    CircleAvatar(
                                                      radius: 35,
                                                      backgroundImage: AssetImage(
                                                        'assets/${sharePosts[index]
                                                            .imageUrl}',
                                                      ),
                                                    ),
                                                    const Spacer(),
                                                    Text(
                                                      sharePosts[index].id,
                                                      overflow: TextOverflow.ellipsis,
                                                      style: const TextStyle(
                                                          fontSize: 12,
                                                          color: Colors.black,
                                                          fontWeight: FontWeight.w500),
                                                    )
                                                  ]),
                                                );
                                              },
                                            ),
                                          ),
                                          const Padding(
                                            padding: EdgeInsets.symmetric(
                                                vertical: 7, horizontal: 15),
                                            child: Divider(
                                              color: Colors.grey,
                                              height: 5,
                                            ),
                                          ),
                                          const Spacer(),
                                          Container(
                                            alignment: Alignment.centerLeft,
                                            padding: const EdgeInsets.symmetric(
                                                horizontal: 15),
                                            child: Column(
                                              crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                              children: const [
                                                Text(
                                                  "This Pin was inspired by your recent activity",
                                                  style: TextStyle(fontSize: 14),
                                                  textAlign: TextAlign.left,
                                                ),
                                                SizedBox(
                                                  height: 20,
                                                ),
                                                Text(
                                                  "Hide",
                                                  style: TextStyle(
                                                      fontSize: 19,
                                                      fontWeight: FontWeight.w600),
                                                ),
                                                SizedBox(
                                                  height: 12,
                                                ),
                                                Text(
                                                  "Report",
                                                  style: TextStyle(
                                                      fontSize: 19,
                                                      fontWeight: FontWeight.w600),
                                                )
                                              ],
                                            ),
                                          ),
                                          const Spacer(),
                                          GestureDetector(
                                            onTap: () => Navigator.pop(context),
                                            child: Container(
                                              padding: const EdgeInsets.symmetric(
                                                  vertical: 20, horizontal: 26),
                                              decoration: BoxDecoration(
                                                  borderRadius:
                                                  BorderRadius.circular(30),
                                                  color: Colors.grey.shade300),
                                              child: const Text("Close",
                                                  style: TextStyle(
                                                      fontWeight: FontWeight.w600)),
                                            ),
                                          )
                                        ],
                                      ),
                                    );
                                  },
                                );
                              },
                              child: const Icon(Icons.more_horiz),
                            ),
                          ],
                        )
                      ],
                    );
                  },
                ),

              );
            } else {
              return const CircularProgressIndicator();
            }
          }
      ),
    );
  }
}

class Post {
  final String id;
  final String imageUrl;
  final String title;

  Post(
      this.id,
      this.imageUrl,
      this.title,
      );
}

final List<Post> posts = [
  Post(
    'id0',
    'https://i0.wp.com/www.tattoo-mistika.fr/wp-content/uploads/2018/10/31351293_1850598344992042_5738909438235876539_n.jpg?ssl=1',
    'IntTattoo',
  ),
  Post(
    'id1',
    'https://astucesdefilles.com/medias/2021/06/24_100-top-idees-de-tatouages-lion.jpg',
    'InkTattoo1',
  ),
  Post(
    'id2',
    'https://i.pinimg.com/originals/45/86/09/45860947bb65b922ab12e768e5b595b9.jpg',
    'InkTattoo2',
  ),
  Post(
    'id3',
    'https://image.jimcdn.com/app/cms/image/transf/dimension=1920x1024:format=jpg/path/s6e3bb4a7f0125942/image/i7c73e8295e77ca4d/version/1635157430/image.jpg',    'InkTattoo3',
  ),
  Post(
    'id4',
    'https://inkin.fr/wp-content/sabai/File/files/l_b1d89c65367922e734a6091be807fec2.jpg',
    'InkTattoo4',
  ),
  Post(
    'id5',
    'https://i.pinimg.com/originals/ca/95/9a/ca959a97fc661b4e4430a223a3c0c593.jpg',
    'InkTattoo5',
  ),
  Post(
    'id6',
    'https://i.pinimg.com/736x/d7/b7/88/d7b7887b643ad9a9e1addc43a93c913a.jpg',
    'InkTattoo6',
  ),
  Post(
    'id7',
    'https://cdn.shopify.com/s/files/1/0243/6058/3202/files/tatouage-horloge_e7863279-3753-4b37-8b13-c4ba0debd00a.jpg?v=1626011176',
    'InkTattoo7',
  ),
  Post(
    'id8',
    'http://www.lesaffaires.com/uploads/images/normal/f1e8952b379d84d7dc3d8f0e4722c2d4.jpg',
    'InkTattoo8',
  ),
  Post(
    'id9',
    'https://www.mon-tatoueur.fr/assets/tatoueurs/monsieur_berdah-1003/2509789351851906731.jpg',
    'InkTattoo9',
  ),
];

final List<Post> sharePosts = [
  Post(
    'WhatsApp',
    'whatsapp.png',
    '',
  ),
  Post(
    'Messenger',
    'messenger.png',
    '',
  ),
  Post(
    'Messages',
    'messages.png',
    '',
  ),
];
